{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Search","handleSearch","toShow","value","onChange","PersonForm","handlePhoneBookSubmit","handleNameChange","handleNumberChange","newName","newNumber","onSubmit","type","Persons","personsToShow","deletePerson","map","person","key","id","name","number","onClick","Notification","message","success","style","color","backgroundColor","fontSize","borderStyle","borderRadius","padding","marginBottom","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","persons","setPersons","setNewName","setNewNumber","setToShow","notificationMessage","setNotificationMessage","filter","includes","useEffect","phoneBookService","entry","Filter","event","target","preventDefault","entryObject","searchResult","length","window","confirm","newEntry","console","log","setTimeout","catch","error","concat","current","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b092a24d.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Search = ({ handleSearch, toShow }) => {\n  return (\n    <div>\n      filter shown with <input value={toShow} onChange={handleSearch} />\n    </div>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\n\nconst PersonForm = ({ handlePhoneBookSubmit, handleNameChange, handleNumberChange, newName, newNumber }) => {\n  return (\n    <form onSubmit={handlePhoneBookSubmit}>\n      <div>\n        name: <input value={newName} onChange={handleNameChange} />\n      </div>\n      <div>\n        number: <input value={newNumber} onChange={handleNumberChange} />\n      </div>\n\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","import React from \"react\";\n\nconst Persons = ({ personsToShow, deletePerson }) => {\n  return personsToShow.map(person => (\n    <div key={person.id}>\n      {person.name} {person.number} <button onClick={() => deletePerson(person.id, person.name)}> Delete </button>\n    </div>\n  ));\n};\n\nexport default Persons;\n","import React from \"react\";\n\nconst Notification = ({ message, success }) => {\n  if (message === null) {\n    return null;\n  }\n  const errorStyle = {\n    color: \"red\",\n    backgroundColor: \"lightgrey\",\n    fontSize: 20,\n    borderStyle: \"solid\",\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  };\n\n  const successStyle = {\n    color: \"green\",\n    backgroundColor: \"lightgrey\",\n    fontSize: 20,\n    borderStyle: \"solid\",\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  };\n\n  return <div style={success ? successStyle : errorStyle}>{message}</div>;\n};\n\nexport default Notification;\n","import axios from \"axios\";\nconst baseUrl = \"https://infinite-waters-84320.herokuapp.com/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then(response => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then(response => response.data);\n};\n\nconst deleteEntry = id => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then(response => response.data);\n};\n\nexport default { getAll, create, update, deleteEntry };\n","import React, { useState, useEffect } from \"react\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport Notification from \"./components/Notification\";\nimport phoneBookService from \"./services/persons\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [toShow, setToShow] = useState(\"\");\n  const [notificationMessage, setNotificationMessage] = useState({ message: null, success: true });\n\n  const handlePhoneBookSubmit = event => {\n    event.preventDefault();\n    const entryObject = {\n      name: newName,\n      number: newNumber\n    };\n\n    const searchResult = persons.filter(person => person.name === newName);\n    if (searchResult.length && window.confirm(`Do you want to update the phone number for ${newName}?`)) {\n      phoneBookService\n        .update(searchResult[0].id, entryObject)\n        .then(newEntry => {\n          console.log(\"Update response\", newEntry);\n          setPersons(persons.map(person => (person.name === newName ? { ...person, number: newNumber } : person)));\n          setNotificationMessage({\n            message: `${newName} has been updated`,\n            success: true\n          });\n          setTimeout(() => {\n            setNotificationMessage({ ...notificationMessage, message: null });\n          }, 5000);\n        })\n        .catch(error => {\n          setNotificationMessage({\n            message: `${newName} can't be updated due to error:${error}`,\n            success: false\n          });\n          setTimeout(() => {\n            setNotificationMessage({ ...notificationMessage, message: null });\n          }, 5000);\n        });\n    } else {\n      phoneBookService\n        .create(entryObject)\n        .then(newEntry => {\n          setPersons(persons.concat(newEntry));\n          setNotificationMessage({\n            message: `${newName} has been added`,\n            success: true\n          });\n          setTimeout(() => {\n            setNotificationMessage({ ...notificationMessage, message: null });\n          }, 5000);\n        })\n        .catch(error => {\n          setNotificationMessage({\n            message: `${newName} has not been added due to error:${error}`,\n            success: false\n          });\n          setTimeout(() => {\n            setNotificationMessage({ ...notificationMessage, message: null });\n          }, 5000);\n        });\n    }\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleSearch = event => setToShow(event.target.value);\n\n  const personsToShow = persons.filter(person => person.name.includes(toShow));\n\n  const deletePerson = (id, name) => {\n    if (window.confirm(`Do you want to delete ${name}`)) {\n      phoneBookService\n        .deleteEntry(id)\n        .then(() => setPersons(persons.filter(current => current.id !== id)))\n        .catch(error => {\n          setNotificationMessage({\n            message: `The entry for ${name} has already been removed from the server`,\n            success: false\n          });\n          setPersons(persons.filter(current => current.id !== id));\n          setTimeout(() => {\n            setNotificationMessage({ ...notificationMessage, message: null });\n          }, 5000);\n        });\n    }\n  };\n  useEffect(() => {\n    phoneBookService.getAll().then(entry => setPersons(entry));\n  }, []);\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification success={notificationMessage.success} message={notificationMessage.message} setNotificationMessage={setNotificationMessage} />\n      <Filter handleSearch={handleSearch} toShow={toShow} />\n      <h2>Add new </h2>\n      <PersonForm handlePhoneBookSubmit={handlePhoneBookSubmit} handleNameChange={handleNameChange} newName={newName} newNumber={newNumber} handleNumberChange={handleNumberChange} />\n      <h2>Numbers</h2>\n      <Persons personsToShow={personsToShow} setPersons={setPersons} persons={persons} deletePerson={deletePerson} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}